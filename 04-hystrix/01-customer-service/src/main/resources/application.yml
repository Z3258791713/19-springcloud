server:
  port: 8081
spring:
  application:
    name: customer-service
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
# hystrix 本质是代理 feign的请求，完成 熔断的效果。
feign:
  hystrix:
    enabled: true
#-----------------Hystrix配置-----------------------
hystrix:
  # === === === == 默认Command === === === ==
  command:
    default: # 全局配置 ，也可以换成单个方法控制，把default 换成 方法名称 就行
      execution:
        isolation:
          # 调用隔离方式, 默认: 采用线程隔离, ExecutionIsolationStrategy:THREAD ， 信号量semaphore
          strategy: THREAD
          # 调用超时时间, 默认: 5 秒
          thread:
            timeoutInMilliseconds: 8000
          # 使用信号量隔离时, 命令调用最大的并发数
          semaphore:
            maxConcurrentRequests: 10
      #使用信号量隔离时, 命令fallback调用最大的并发数
      fallback:
        isolation:
          semaphore:
            maxConcurrentRequests: 10 # 信号量隔离级别最大并发数
      # === === === == 熔断器 === === === ==
      circuitBreaker:
        # 开启熔断器
        enabled: true
        # 熔断器在整个统计时间内是否开启的阀值, 默认20个请求
        requestVolumeThreshold: 3
        # 熔断器默认工作时间, 默认: 5 秒
        sleepWindowInMilliseconds: 20000
        # 默认: 50%, 当出错率超过50% 后熔断器启动
        errorThresholdPercentage: 60
        # 是否强制开启熔断器阻断所有请求, 默认: false, 不开启
        forceOpen: false
        # 是否允许熔断器忽略错误, 默认false, 不开启
        forceClosed: false
  # === === === == 线程池 === === === ==
  threadpool:
    default:
      # 配置线程池大小, 默认值10个
      coreSize: 0
      # 配置队列长度, 默认-1使用SynchronousQueue,其他值则使用LinkedBlockingQueue:不可动态修改:
      maxQueueSize: -1
      # 队列拒绝的阈值,可通过修改这个变量动态修改允许排队的长度: maxQueueSize=-1时不适用:
      queueSizeRejectionThreshold: 5
      # 线程生存时间, 默认1分钟
      keepAliveTimeMinutes: 1
